# Install Git hooks for this repository
# - Installs a pre-commit shim that invokes the PowerShell hook
# - Safe to re-run

param()

$ErrorActionPreference = 'Stop'

function Write-Info($m){ Write-Host $m -ForegroundColor Cyan }
function Write-Warn($m){ Write-Host $m -ForegroundColor Yellow }
function Write-Err($m){ Write-Host $m -ForegroundColor Red }

# Resolve repo root and hooks dir
$repoRoot = (& git rev-parse --show-toplevel) 2>$null
if (-not $repoRoot) { Write-Err "Not a git repository."; exit 1 }
$hooksDir = Join-Path $repoRoot ".git/hooks"
if (-not (Test-Path $hooksDir)) { New-Item -ItemType Directory -Path $hooksDir | Out-Null }

# Source hook path
$psHook = Join-Path $repoRoot "scripts/git-hooks/pre-commit.ps1"
if (-not (Test-Path $psHook)) { Write-Err "Hook script not found: $psHook"; exit 1 }

# Create a small shell shim so Git can run it as hooks/pre-commit
$shimPath = Join-Path $hooksDir "pre-commit"
$shim = @(
  '#!/usr/bin/env sh',
  '# Auto-generated by scripts/git-hooks/install.ps1',
  '# This shim resolves the repo-relative PS1 path and invokes PowerShell reliably on Windows/MSYS.',
  'set -e',
  '',
  '# Resolve repo root from hooks dir (this file lives in .git/hooks)',
  'hook_dir="$(cd "$(dirname "$0")" && pwd)"',
  'repo_root="$(cd "$hook_dir/.." && cd .. && pwd)"',
  'ps1_path="$repo_root/scripts/git-hooks/pre-commit.ps1"',
  '',
  '# Convert to Windows path when under Git Bash/MSYS for pwsh/powershell.exe',
  'if command -v cygpath >/dev/null 2>&1; then',
  '  ps1_win="$(cygpath -w "$ps1_path")"',
  'else',
  '  ps1_win="$ps1_path"',
  'fi',
  '',
  '# Prefer pwsh; fallback to Windows PowerShell if not found',
  'if command -v pwsh >/dev/null 2>&1; then',
  '  shell="pwsh"',
  'else',
  '  shell="powershell.exe"',
  'fi',
  '',
  'exec "$shell" -NoProfile -ExecutionPolicy Bypass -File "$ps1_win"'
) -join "`n"

# Write without a UTF-8 BOM so Git for Windows can execute the shim correctly
[System.IO.File]::WriteAllText(
  $shimPath,
  $shim + "`n",
  [System.Text.UTF8Encoding]::new($false)
)

# Ensure executable on POSIX; on Windows Git Bash it's not required but harmless
try {
  & git update-index --chmod=+x -- ".git/hooks/pre-commit" 2>$null | Out-Null
} catch {}

Write-Info "Installed pre-commit hook: $shimPath"
Write-Info "You can test it by committing any .cs change; it will run ./format.ps1 -Scope staged automatically."
